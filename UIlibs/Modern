local UILib = {}

-- Configurações padrão
local defaultSettings = {
    ThemeColor = Color3.fromRGB(0, 120, 215),
    TextColor = Color3.fromRGB(255, 255, 255),
    Font = Enum.Font.SourceSans,
    TextSize = 14,
    WindowSize = UDim2.new(0, 400, 0, 300),
    WindowPosition = UDim2.new(0.5, -200, 0.5, -150),
    BackgroundTransparency = 0.3
}

-- Função para criar uma nova janela
function UILib:CreateWindow(title, settings)
    -- Combinar configurações padrão com as personalizadas
    settings = settings or {}
    for k, v in pairs(defaultSettings) do
        if settings[k] == nil then
            settings[k] = v
        end
    end
    
    -- Criação dos elementos da UI
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "UILibWindow_" .. tostring(math.random(1, 10000))
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = game:GetService("CoreGui") -- Usamos CoreGui para executores

    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = settings.WindowSize
    mainFrame.Position = settings.WindowPosition
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    mainFrame.BackgroundTransparency = settings.BackgroundTransparency
    mainFrame.BorderSizePixel = 0
    mainFrame.ClipsDescendants = true
    mainFrame.Parent = screenGui

    -- Adiciona sombra (opcional)
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.Size = UDim2.new(1, 10, 1, 10)
    shadow.Position = UDim2.new(0, -5, 0, -5)
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageColor3 = Color3.new(0, 0, 0)
    shadow.ImageTransparency = 0.8
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)
    shadow.BackgroundTransparency = 1
    shadow.Parent = mainFrame
    shadow.ZIndex = -1

    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = settings.ThemeColor
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame

    local titleText = Instance.new("TextLabel")
    titleText.Name = "TitleText"
    titleText.Size = UDim2.new(1, -40, 1, 0)
    titleText.Position = UDim2.new(0, 10, 0, 0)
    titleText.BackgroundTransparency = 1
    titleText.Text = title or "Window"
    titleText.TextColor3 = settings.TextColor
    titleText.Font = settings.Font
    titleText.TextSize = settings.TextSize + 2
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    titleText.Parent = titleBar

    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 30, 1, 0)
    closeButton.Position = UDim2.new(1, -30, 0, 0)
    closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    closeButton.Text = "X"
    closeButton.TextColor3 = settings.TextColor
    closeButton.Font = Enum.Font.SourceSansBold
    closeButton.TextSize = settings.TextSize + 2
    closeButton.Parent = titleBar

    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "ContentFrame"
    contentFrame.Size = UDim2.new(1, -10, 1, -40)
    contentFrame.Position = UDim2.new(0, 5, 0, 35)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Parent = mainFrame

    -- Adiciona lista de elementos (para organização)
    local uiList = Instance.new("UIListLayout")
    uiList.Padding = UDim.new(0, 5)
    uiList.SortOrder = Enum.SortOrder.LayoutOrder
    uiList.Parent = contentFrame

    -- Adicionar padding
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 5)
    padding.PaddingTop = UDim.new(0, 5)
    padding.Parent = contentFrame

    -- Função para arrastar a janela
    local dragging, dragInput, dragStart, startPos
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    titleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(
                startPos.X.Scale, 
                startPos.X.Offset + delta.X, 
                startPos.Y.Scale, 
                startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    -- Fechar a janela
    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)

    -- Métodos para a janela
    local windowMethods = {}

    function windowMethods:Destroy()
        screenGui:Destroy()
    end

    function windowMethods:ToggleVisibility()
        screenGui.Enabled = not screenGui.Enabled
    end

    function windowMethods:CreateButton(buttonName, callback)
        local button = Instance.new("TextButton")
        button.Name = buttonName or "Button"
        button.Size = UDim2.new(1, -10, 0, 30)
        button.BackgroundColor3 = settings.ThemeColor
        button.TextColor3 = settings.TextColor
        button.Font = settings.Font
        button.TextSize = settings.TextSize
        button.Text = buttonName or "Button"
        button.LayoutOrder = #contentFrame:GetChildren()
        button.Parent = contentFrame
        
        if callback then
            button.MouseButton1Click:Connect(callback)
        end
        
        return button
    end

    function windowMethods:CreateLabel(labelText)
        local label = Instance.new("TextLabel")
        label.Name = "Label"
        label.Size = UDim2.new(1, -10, 0, 20)
        label.BackgroundTransparency = 1
        label.TextColor3 = settings.TextColor
        label.Font = settings.Font
        label.TextSize = settings.TextSize
        label.Text = labelText or "Label"
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.LayoutOrder = #contentFrame:GetChildren()
        label.Parent = contentFrame
        
        return label
    end

    function windowMethods:CreateTextBox(placeholder)
        local textBox = Instance.new("TextBox")
        textBox.Name = "TextBox"
        textBox.Size = UDim2.new(1, -10, 0, 30)
        textBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        textBox.TextColor3 = settings.TextColor
        textBox.Font = settings.Font
        textBox.TextSize = settings.TextSize
        textBox.PlaceholderText = placeholder or "Type here..."
        textBox.ClearTextOnFocus = false
        textBox.LayoutOrder = #contentFrame:GetChildren()
        textBox.Parent = contentFrame
        
        return textBox
    end

    function windowMethods:CreateToggle(toggleName, default, callback)
        local toggleFrame = Instance.new("Frame")
        toggleFrame.Name = "ToggleFrame"
        toggleFrame.Size = UDim2.new(1, -10, 0, 25)
        toggleFrame.BackgroundTransparency = 1
        toggleFrame.LayoutOrder = #contentFrame:GetChildren()
        toggleFrame.Parent = contentFrame

        local toggleButton = Instance.new("TextButton")
        toggleButton.Name = "ToggleButton"
        toggleButton.Size = UDim2.new(0, 40, 0, 20)
        toggleButton.Position = UDim2.new(1, -40, 0.5, -10)
        toggleButton.BackgroundColor3 = default and settings.ThemeColor or Color3.fromRGB(80, 80, 80)
        toggleButton.Text = ""
        toggleButton.Parent = toggleFrame

        local toggleLabel = Instance.new("TextLabel")
        toggleLabel.Name = "ToggleLabel"
        toggleLabel.Size = UDim2.new(1, -50, 1, 0)
        toggleLabel.BackgroundTransparency = 1
        toggleLabel.TextColor3 = settings.TextColor
        toggleLabel.Font = settings.Font
        toggleLabel.TextSize = settings.TextSize
        toggleLabel.Text = toggleName or "Toggle"
        toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
        toggleLabel.Parent = toggleFrame

        local currentValue = default or false

        toggleButton.MouseButton1Click:Connect(function()
            currentValue = not currentValue
            toggleButton.BackgroundColor3 = currentValue and settings.ThemeColor or Color3.fromRGB(80, 80, 80)
            if callback then callback(currentValue) end
        end)

        local toggleMethods = {}

        function toggleMethods:SetValue(value)
            currentValue = value
            toggleButton.BackgroundColor3 = currentValue and settings.ThemeColor or Color3.fromRGB(80, 80, 80)
            if callback then callback(currentValue) end
        end

        function toggleMethods:GetValue()
            return currentValue
        end

        return toggleMethods
    end

    return windowMethods
end

return UILib
